{"ast":null,"code":"import axios from \"axios\";\nconst baseurl = \"http://localhost:3001\";\n\n// admin login\nexport const adminLogin = async (username, password) => {\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/admin-login\",\n    data: {\n      username: username,\n      password: password\n    }\n  }).then(response => {\n    return response.data;\n  });\n};\n\n// create admin\nexport const createAdmin = async (username, password, token) => {\n  console.log(token);\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/create-admin\",\n    data: {\n      username: username,\n      password: password\n    },\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.data;\n  });\n};\n\n// create party\nexport const createParty = async (name, token) => {\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/create-party\",\n    data: {\n      name: name\n    },\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.data;\n  });\n};\n\n// get party\nexport const getParty = async token => {\n  return await axios({\n    method: \"GET\",\n    url: baseurl + \"/get-party\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    responseType: \"json\"\n  }).then(response => {\n    return response.data;\n  });\n};\n\n// create category\nexport const createCategory = async (name, token) => {\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/create-category\",\n    data: {\n      name: name\n    },\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.data;\n  });\n};\n\n// get category\nexport const getCategory = async token => {\n  return await axios({\n    method: \"GET\",\n    url: baseurl + \"/get-category\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    responseType: \"json\"\n  }).then(response => {\n    return response.data;\n  });\n};\n\n// delete category\nexport const deleteCategory = async token => {\n  return await axios({\n    method: \"DELETE\",\n    url: baseurl + \"/delete-category\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\n// create candidate\nexport const createCandidate = async (name, address, citizenshipid, dob, c_id, p_id, token) => {\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/create-candidate\",\n    data: {\n      name: name,\n      address: address,\n      citizenshipid: citizenshipid,\n      dob: dob,\n      c_id: c_id,\n      p_id: p_id\n    },\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.data;\n  });\n};\n\n// get candidate\nexport const getCandidate = async token => {\n  return await axios({\n    method: \"GET\",\n    url: baseurl + \"/get-candidate\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    responseType: \"json\"\n  }).then(response => {\n    return response.data;\n  });\n};\n\n// get full candidate\nexport const getFullCandidate = async token => {\n  return await axios({\n    method: \"GET\",\n    url: baseurl + \"/get-full-candidate\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    responseType: \"json\"\n  }).then(response => {\n    return response.data;\n  });\n};\n\n// create voter\nexport const createVoter = async (name, address, email, citizenshipid, dob, password, token) => {\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/create-voter\",\n    data: {\n      name: name,\n      address: address,\n      email: email,\n      citizenshipid: citizenshipid,\n      dob: dob,\n      password: password\n    },\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.data;\n  });\n};\n\n// get voter\nexport const getVoter = async token => {\n  return await axios({\n    method: \"GET\",\n    url: baseurl + \"/get-voter\",\n    responseType: \"json\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.data;\n  });\n};\n\n// usr login\nexport const userLogin = async (email, password) => {\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/user-login\",\n    data: {\n      email: email,\n      password: password\n    }\n  }).then(response => {\n    // console.log(response.data);\n    return response.data;\n  });\n};","map":{"version":3,"names":["axios","baseurl","adminLogin","username","password","method","url","data","then","response","createAdmin","token","console","log","headers","Authorization","createParty","name","getParty","responseType","createCategory","getCategory","deleteCategory","createCandidate","address","citizenshipid","dob","c_id","p_id","getCandidate","getFullCandidate","createVoter","email","getVoter","userLogin"],"sources":["/home/anil/Desktop/minor/frontend/src/Api/ApiHandler.js"],"sourcesContent":["import axios from \"axios\";\nconst baseurl = \"http://localhost:3001\";\n\n// admin login\nexport const adminLogin = async (username, password) => {\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/admin-login\",\n    data: {\n      username: username,\n      password: password,\n    },\n  }).then((response) => {\n    return response.data;\n  });\n};\n\n// create admin\nexport const createAdmin = async (username, password, token) => {\n  console.log(token);\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/create-admin\",\n    data: {\n      username: username,\n      password: password,\n    },\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((response) => {\n    return response.data;\n  });\n};\n\n// create party\nexport const createParty = async (name, token) => {\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/create-party\",\n    data: {\n      name: name,\n    },\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((response) => {\n    return response.data;\n  });\n};\n\n// get party\nexport const getParty = async (token) => {\n  return await axios({\n    method: \"GET\",\n    url: baseurl + \"/get-party\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n    responseType: \"json\",\n  }).then((response) => {\n    return response.data;\n  });\n};\n\n// create category\nexport const createCategory = async (name, token) => {\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/create-category\",\n    data: {\n      name: name,\n    },\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((response) => {\n    return response.data;\n  });\n};\n\n// get category\nexport const getCategory = async (token) => {\n  return await axios({\n    method: \"GET\",\n    url: baseurl + \"/get-category\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n    responseType: \"json\",\n  }).then((response) => {\n    return response.data;\n  });\n};\n\n// delete category\nexport const deleteCategory = async (token) => {\n  return await axios({\n    method: \"DELETE\",\n    url: baseurl + \"/delete-category\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\n// create candidate\nexport const createCandidate = async (\n  name,\n  address,\n  citizenshipid,\n  dob,\n  c_id,\n  p_id,\n  token\n) => {\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/create-candidate\",\n    data: {\n      name: name,\n      address: address,\n      citizenshipid: citizenshipid,\n      dob: dob,\n      c_id: c_id,\n      p_id: p_id,\n    },\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((response) => {\n    return response.data;\n  });\n};\n\n// get candidate\nexport const getCandidate = async (token) => {\n  return await axios({\n    method: \"GET\",\n    url: baseurl + \"/get-candidate\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n    responseType: \"json\",\n  }).then((response) => {\n    return response.data;\n  });\n};\n\n// get full candidate\nexport const getFullCandidate = async (token) => {\n  return await axios({\n    method: \"GET\",\n    url: baseurl + \"/get-full-candidate\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n    responseType: \"json\",\n  }).then((response) => {\n    return response.data;\n  });\n};\n\n// create voter\nexport const createVoter = async (\n  name,\n  address,\n  email,\n  citizenshipid,\n  dob,\n  password,\n  token\n) => {\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/create-voter\",\n    data: {\n      name: name,\n      address: address,\n      email: email,\n      citizenshipid: citizenshipid,\n      dob: dob,\n      password: password,\n    },\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((response) => {\n    return response.data;\n  });\n};\n\n// get voter\nexport const getVoter = async (token) => {\n  return await axios({\n    method: \"GET\",\n    url: baseurl + \"/get-voter\",\n    responseType: \"json\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((response) => {\n    return response.data;\n  });\n};\n\n// usr login\nexport const userLogin = async (email, password) => {\n  return await axios({\n    method: \"POST\",\n    url: baseurl + \"/user-login\",\n    data: {\n      email: email,\n      password: password,\n    },\n  }).then((response) => {\n    // console.log(response.data);\n    return response.data;\n  });\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,uBAAuB;;AAEvC;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACtD,OAAO,MAAMJ,KAAK,CAAC;IACjBK,MAAM,EAAE,MAAM;IACdC,GAAG,EAAEL,OAAO,GAAG,cAAc;IAC7BM,IAAI,EAAE;MACJJ,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;IACZ;EACF,CAAC,CAAC,CAACI,IAAI,CAAEC,QAAQ,IAAK;IACpB,OAAOA,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAG,MAAAA,CAAOP,QAAQ,EAAEC,QAAQ,EAAEO,KAAK,KAAK;EAC9DC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,OAAO,MAAMX,KAAK,CAAC;IACjBK,MAAM,EAAE,MAAM;IACdC,GAAG,EAAEL,OAAO,GAAG,eAAe;IAC9BM,IAAI,EAAE;MACJJ,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;IACZ,CAAC;IACDU,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC;EACF,CAAC,CAAC,CAACH,IAAI,CAAEC,QAAQ,IAAK;IACpB,OAAOA,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMS,WAAW,GAAG,MAAAA,CAAOC,IAAI,EAAEN,KAAK,KAAK;EAChD,OAAO,MAAMX,KAAK,CAAC;IACjBK,MAAM,EAAE,MAAM;IACdC,GAAG,EAAEL,OAAO,GAAG,eAAe;IAC9BM,IAAI,EAAE;MACJU,IAAI,EAAEA;IACR,CAAC;IACDH,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC;EACF,CAAC,CAAC,CAACH,IAAI,CAAEC,QAAQ,IAAK;IACpB,OAAOA,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMW,QAAQ,GAAG,MAAOP,KAAK,IAAK;EACvC,OAAO,MAAMX,KAAK,CAAC;IACjBK,MAAM,EAAE,KAAK;IACbC,GAAG,EAAEL,OAAO,GAAG,YAAY;IAC3Ba,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC,CAAC;IACDQ,YAAY,EAAE;EAChB,CAAC,CAAC,CAACX,IAAI,CAAEC,QAAQ,IAAK;IACpB,OAAOA,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMa,cAAc,GAAG,MAAAA,CAAOH,IAAI,EAAEN,KAAK,KAAK;EACnD,OAAO,MAAMX,KAAK,CAAC;IACjBK,MAAM,EAAE,MAAM;IACdC,GAAG,EAAEL,OAAO,GAAG,kBAAkB;IACjCM,IAAI,EAAE;MACJU,IAAI,EAAEA;IACR,CAAC;IACDH,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC;EACF,CAAC,CAAC,CAACH,IAAI,CAAEC,QAAQ,IAAK;IACpB,OAAOA,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMc,WAAW,GAAG,MAAOV,KAAK,IAAK;EAC1C,OAAO,MAAMX,KAAK,CAAC;IACjBK,MAAM,EAAE,KAAK;IACbC,GAAG,EAAEL,OAAO,GAAG,eAAe;IAC9Ba,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC,CAAC;IACDQ,YAAY,EAAE;EAChB,CAAC,CAAC,CAACX,IAAI,CAAEC,QAAQ,IAAK;IACpB,OAAOA,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMe,cAAc,GAAG,MAAOX,KAAK,IAAK;EAC7C,OAAO,MAAMX,KAAK,CAAC;IACjBK,MAAM,EAAE,QAAQ;IAChBC,GAAG,EAAEL,OAAO,GAAG,kBAAkB;IACjCa,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC;EACF,CAAC,CAAC;AACJ,CAAC;AACD;AACA,OAAO,MAAMY,eAAe,GAAG,MAAAA,CAC7BN,IAAI,EACJO,OAAO,EACPC,aAAa,EACbC,GAAG,EACHC,IAAI,EACJC,IAAI,EACJjB,KAAK,KACF;EACH,OAAO,MAAMX,KAAK,CAAC;IACjBK,MAAM,EAAE,MAAM;IACdC,GAAG,EAAEL,OAAO,GAAG,mBAAmB;IAClCM,IAAI,EAAE;MACJU,IAAI,EAAEA,IAAI;MACVO,OAAO,EAAEA,OAAO;MAChBC,aAAa,EAAEA,aAAa;MAC5BC,GAAG,EAAEA,GAAG;MACRC,IAAI,EAAEA,IAAI;MACVC,IAAI,EAAEA;IACR,CAAC;IACDd,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC;EACF,CAAC,CAAC,CAACH,IAAI,CAAEC,QAAQ,IAAK;IACpB,OAAOA,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMsB,YAAY,GAAG,MAAOlB,KAAK,IAAK;EAC3C,OAAO,MAAMX,KAAK,CAAC;IACjBK,MAAM,EAAE,KAAK;IACbC,GAAG,EAAEL,OAAO,GAAG,gBAAgB;IAC/Ba,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC,CAAC;IACDQ,YAAY,EAAE;EAChB,CAAC,CAAC,CAACX,IAAI,CAAEC,QAAQ,IAAK;IACpB,OAAOA,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMuB,gBAAgB,GAAG,MAAOnB,KAAK,IAAK;EAC/C,OAAO,MAAMX,KAAK,CAAC;IACjBK,MAAM,EAAE,KAAK;IACbC,GAAG,EAAEL,OAAO,GAAG,qBAAqB;IACpCa,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC,CAAC;IACDQ,YAAY,EAAE;EAChB,CAAC,CAAC,CAACX,IAAI,CAAEC,QAAQ,IAAK;IACpB,OAAOA,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMwB,WAAW,GAAG,MAAAA,CACzBd,IAAI,EACJO,OAAO,EACPQ,KAAK,EACLP,aAAa,EACbC,GAAG,EACHtB,QAAQ,EACRO,KAAK,KACF;EACH,OAAO,MAAMX,KAAK,CAAC;IACjBK,MAAM,EAAE,MAAM;IACdC,GAAG,EAAEL,OAAO,GAAG,eAAe;IAC9BM,IAAI,EAAE;MACJU,IAAI,EAAEA,IAAI;MACVO,OAAO,EAAEA,OAAO;MAChBQ,KAAK,EAAEA,KAAK;MACZP,aAAa,EAAEA,aAAa;MAC5BC,GAAG,EAAEA,GAAG;MACRtB,QAAQ,EAAEA;IACZ,CAAC;IACDU,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC;EACF,CAAC,CAAC,CAACH,IAAI,CAAEC,QAAQ,IAAK;IACpB,OAAOA,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAM0B,QAAQ,GAAG,MAAOtB,KAAK,IAAK;EACvC,OAAO,MAAMX,KAAK,CAAC;IACjBK,MAAM,EAAE,KAAK;IACbC,GAAG,EAAEL,OAAO,GAAG,YAAY;IAC3BkB,YAAY,EAAE,MAAM;IACpBL,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC;EACF,CAAC,CAAC,CAACH,IAAI,CAAEC,QAAQ,IAAK;IACpB,OAAOA,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAM2B,SAAS,GAAG,MAAAA,CAAOF,KAAK,EAAE5B,QAAQ,KAAK;EAClD,OAAO,MAAMJ,KAAK,CAAC;IACjBK,MAAM,EAAE,MAAM;IACdC,GAAG,EAAEL,OAAO,GAAG,aAAa;IAC5BM,IAAI,EAAE;MACJyB,KAAK,EAAEA,KAAK;MACZ5B,QAAQ,EAAEA;IACZ;EACF,CAAC,CAAC,CAACI,IAAI,CAAEC,QAAQ,IAAK;IACpB;IACA,OAAOA,QAAQ,CAACF,IAAI;EACtB,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}