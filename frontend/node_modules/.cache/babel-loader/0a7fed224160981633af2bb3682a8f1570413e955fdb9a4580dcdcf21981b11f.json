{"ast":null,"code":"var _jsxFileName = \"/home/anil/Desktop/Minor Project/frontend/src/Admin/Admin.js\",\n  _s = $RefreshSig$();\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Manage from \"./Manage/Manage\";\nimport Register from \"./Register/Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/register\",\n  element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 14\n  }, this)\n}, {\n  path: \"/admin\",\n  element: /*#__PURE__*/_jsxDEV(Manage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 14\n  }, this)\n}]);\nconst Admin = () => {\n  _s();\n  // defining states\n  const [isLoggedin, setIsLoggedin] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"login\");\n\n  //   tab function\n  const showForm = formName => {\n    setActiveTab(formName);\n  };\n\n  // loggedin State Handler Function\n  const loginStateHandler = state => {\n    setIsLoggedin(state);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoggedin ? /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"login-form\",\n          class: \"form-content active\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Admin Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"text\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"text\",\n              name: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Admin, \"pM2jrce3wAOROG1XpyM58bz8Lr0=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","useState","Manage","Register","jsxDEV","_jsxDEV","Fragment","_Fragment","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","Admin","_s","isLoggedin","setIsLoggedin","activeTab","setActiveTab","showForm","formName","loginStateHandler","state","children","class","id","for","type","name","required","_c","$RefreshReg$"],"sources":["/home/anil/Desktop/Minor Project/frontend/src/Admin/Admin.js"],"sourcesContent":["\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Manage from \"./Manage/Manage\";\nimport Register from \"./Register/Register\";\nconst router = createBrowserRouter([\n\n  {\n    path: \"/register\",\n    element: <Register/>,\n  },\n  {\n    path: \"/admin\",\n    element: <Manage/>,\n  },\n]);\n\nconst Admin = () => {\n  // defining states\n  const [isLoggedin, setIsLoggedin] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"login\");\n\n  //   tab function\n  const showForm = (formName) => {\n    setActiveTab(formName);\n  };\n\n  // loggedin State Handler Function\n  const loginStateHandler = (state) => {\n    setIsLoggedin(state);\n  };\n\n  return (\n    <>\n      {!isLoggedin ? (\n        <div class=\"container\">\n          <div class=\"form-container\">\n            <div id=\"login-form\" class=\"form-content active\">\n              <h2>Admin Login</h2>\n              <form>\n                <label for=\"text\">Username</label>\n                <input type=\"text\" id=\"text\" name=\"email\" required />\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" name=\"password\" required />\n                <button type=\"submit\">Login</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div />\n      )}\n    </>\n  );\n};\n\nexport default Admin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}