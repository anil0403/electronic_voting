{"ast":null,"code":"var _jsxFileName = \"/home/anil/Desktop/minor/frontend/src/Admin/Register/RegisterParty.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { createParty } from \"../../Api/ApiHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegisterParty = props => {\n  _s();\n  const token = props.token;\n\n  // defining state\n  const [name, setName] = useState(\"\");\n  const [alert, setAlert] = useState(\"\");\n  const submitHandler = e => {\n    e.preventDefault();\n    createParty(name, token).then(response => {\n      console.log(response);\n      setAlert(response.message);\n      setName(\"\");\n      sessionStorage.setItem(\"refreshData\", Math.random());\n\n      // window.location.reload();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"text\",\n        children: \"Party:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"party\",\n        name: \"party\",\n        placeholder: \"Enter name of party\",\n        onChange: e => setName(e.target.value),\n        value: name,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Party\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"alert\",\n      children: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RegisterParty, \"7N3e+7I83fAVlm+ltvnYifnMPGU=\");\n_c = RegisterParty;\nexport default RegisterParty;\nvar _c;\n$RefreshReg$(_c, \"RegisterParty\");","map":{"version":3,"names":["useState","createParty","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterParty","props","_s","token","name","setName","alert","setAlert","submitHandler","e","preventDefault","then","response","console","log","message","sessionStorage","setItem","Math","random","children","onSubmit","for","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","onChange","target","value","required","class","_c","$RefreshReg$"],"sources":["/home/anil/Desktop/minor/frontend/src/Admin/Register/RegisterParty.js"],"sourcesContent":["import { useState } from \"react\";\nimport { createParty } from \"../../Api/ApiHandler\";\nconst RegisterParty = (props) => {\n  const token = props.token;\n\n  // defining state\n  const [name, setName] = useState(\"\");\n  const [alert, setAlert] = useState(\"\");\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    createParty(name, token).then((response) => {\n      console.log(response);\n      setAlert(response.message);\n      setName(\"\");\n      sessionStorage.setItem(\"refreshData\", Math.random());\n\n      // window.location.reload();\n    });\n  };\n  return (\n    <>\n      <form onSubmit={submitHandler}>\n        <label for=\"text\">Party:</label>\n        <input\n          type=\"text\"\n          id=\"party\"\n          name=\"party\"\n          placeholder=\"Enter name of party\"\n          onChange={(e) => setName(e.target.value)}\n          value={name}\n          required\n        />\n        <button type=\"submit\">Add Party</button>\n      </form>\n      <div class=\"alert\">{alert}</div>\n    </>\n  );\n};\n\nexport default RegisterParty;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACnD,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC/B,MAAMC,KAAK,GAAGF,KAAK,CAACE,KAAK;;EAEzB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClBf,WAAW,CAACS,IAAI,EAAED,KAAK,CAAC,CAACQ,IAAI,CAAEC,QAAQ,IAAK;MAC1CC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBL,QAAQ,CAACK,QAAQ,CAACG,OAAO,CAAC;MAC1BV,OAAO,CAAC,EAAE,CAAC;MACXW,cAAc,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,MAAM,EAAE,CAAC;;MAEpD;IACF,CAAC,CAAC;EACJ,CAAC;;EACD,oBACEtB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA;MAAMwB,QAAQ,EAAEb,aAAc;MAAAY,QAAA,gBAC5BvB,OAAA;QAAOyB,GAAG,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAChC7B,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,OAAO;QACVxB,IAAI,EAAC,OAAO;QACZyB,WAAW,EAAC,qBAAqB;QACjCC,QAAQ,EAAGrB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACsB,MAAM,CAACC,KAAK,CAAE;QACzCA,KAAK,EAAE5B,IAAK;QACZ6B,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACR,eACF7B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnC,eACP7B,OAAA;MAAKqC,KAAK,EAAC,OAAO;MAAAd,QAAA,EAAEd;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA,gBAC/B;AAEP,CAAC;AAACxB,EAAA,CApCIF,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}